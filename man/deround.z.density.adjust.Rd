% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deround_zda.R
\name{deround.z.density.adjust}
\alias{deround.z.density.adjust}
\title{Draw derounded z assuming missing digits of mu and sigma are uniformly distributed, but adjust for estimated density of z using rejection sampling}
\usage{
deround.z.density.adjust(
  z.pdf,
  mu,
  sigma,
  mu.dec = pmax(num.deci(mu), num.deci(sigma)),
  sigma.dec = mu.dec,
  max.rejection.rounds = 10000,
  verbose = TRUE,
  just.uniform = rep(FALSE, length(mu)),
  z.min = 0,
  z.max = 5
)
}
\arguments{
\item{z.pdf}{An estimated density of the derounded z-statistics (e.g. using only observations with many significant digits) normalized such that its highest values is 1. Best use \code{make.z.pdf} to create such a normalized pdf from a vector of observed z-statistics.}

\item{mu}{Reported coefficient, possibly rounded}

\item{sigma}{Reported standard error, possibly rounded.}

\item{mu.dec}{Number of decimal places mu is reported to. Usually, we would assume that mu and sigma are rounded to the same number of decimal places. Since trailing zeros may not be detected, we set the default \code{mu.dec=pmax(num.deci(mu),num.deci(sigma))}.}

\item{sigma.dec}{By default equal to mu.dec.}

\item{max.rejection.rounds}{A limit how often the rejection sampler redraws to avoid an infinite loop.}

\item{verbose}{If \code{TRUE} cat an r for each resampling draw to see how the function progresses.}
}
\description{
Draw derounded z assuming missing digits of mu and sigma are uniformly distributed, but adjust for estimated density of z using rejection sampling
}
