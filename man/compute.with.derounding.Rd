% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deround.R
\name{compute.with.derounding}
\alias{compute.with.derounding}
\title{Compute t-tests (or other summary statistics) for different window half-widths around z0 using some derounding approach}
\usage{
\method{compute}{with.derounding}(
  dat,
  h.seq = c(0.05, 0.075, 0.1, 0.2, 0.3, 0.4, 0.5),
  mode = c("reported", "uniform", "zda", "dsr")[1],
  fun = compute.binom.test,
  z0 = ifelse(has.col(dat, "z0"), dat[["z0"]], 1.96),
  z.pdf = NULL,
  ab.df = NULL,
  repl = 1,
  aggregate.fun = "median",
  max.s = 100,
  alt.mode = c("uniform", "reported")[2]
)
}
\arguments{
\item{dat}{a data frame containing all observations. Each observation is a test from a regression table in some article. It must have  the columns \code{mu} (reported coefficient) and \code{sigma} (reported standard error). It also have columns z, num.deci and s. If those later columns do not exist, they will be computed from mu and sigma.}

\item{h.seq}{All considered half-window sizes}

\item{mode}{Mode how a single draw of derounded z is computed: "reported", "uniform","zda","dsr" or some custom name (requires ab.df to be defined)}

\item{sigma}{Reported standard error, possibly rounded.}

\item{mu.dec}{Number of decimal places mu is reported to. Usually, we would assume that mu and sigma are rounded to the same number of decimal places. Since trailing zeros may not be detected, we set the default \code{mu.dec=pmax(num.deci(mu),num.deci(sigma))}.}

\item{sigma.dec}{By default equal to mu.dec.}
}
\description{
Compute t-tests (or other summary statistics) for different window half-widths around z0 using some derounding approach
}
